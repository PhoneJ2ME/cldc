#
#   
#
# Copyright 1990-2006 Sun Microsystems, Inc. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
#

# Build configuration for generic_i386. 
# for IsRomGen and  IsLoopGen, host_os = os_family = win32, arch = i386
# for IsTarget: host_os = win32, os_family = generic, arch = i386
#

MakeDepsMain_generic     = WinGammaPlatform

MakeDepsOpts_generic     = -resolveVpath true

host_os   = win32
host_arch = i386
os_family = generic
compiler  = visCPP

arch = i386

ifeq ($(IsLoopGen),true)
    # LoopGen: an .exe that runs on the HOST. It has
    # an i386 assembler loop generator and will generate the i386
    # assembler loop.
    os_family          = $(host_os)
endif

ifeq ($(IsRomGen),true)
    # RomGem: an .exe that runs on the HOST. It has
    # an i386 assembler or C loop. It runs on the HOST to
    # generate the (machine independent) ROM.cpp file.
    os_family      = $(host_os)
endif

ifeq ($(IsTarget),true)
    # target/{cldc_vm.axf, cldc_vm_r.axf, cldc_vm_g.axf}.
    # These are pure STUB/I386 binaries that run on the TARGET.
    os_family = generic
    arch      = i386

#----------------------------------------------------------------------
# FSImage is the 'file system image'. Default the VM will access EEMBC.jar
# the eembc.jar has been mapped into /src/vm/os/$(os_family)/FSImage.c by
# TCL Script: /internal_misc/make_fs_image.tcl. If you want the VM to access
# specified jar files, you need to copy all jar files into a directory, 
# and define FSIMAGE_SRCS which points to this directory.  Then all files 
# in this directory are mapped in FSImage.c,
# such that they will be accessible by the OsFile_$(os_family) functions.
#
# Note 1: If your computer doesn't support TCL Script or you don't specified p
# the File System Image, please don't define FSIMAGE_SRCS

# Note 2: currently you may not have subdirectories inside
# $(FSIMAGE_SRCS).
#----------------------------------------------------------------------

ifndef FSIMAGE_SRCS
# FSIMAGE_SRCS=		#FSIMAGE_SRCS should be defined here
endif

FSImage.obj: FSImage.c 
	@echo " ... $(notdir $<)" 
	@$(CPP) $(CPP_FLAGS) -c $<

EXE_OBJS +=         FSImage.obj

#----------------------------------------------------------------------

endif
export BUILD_ANI_LIB := true
